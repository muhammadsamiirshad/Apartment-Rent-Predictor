{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/coding/python/AI-final/frontend/src/app/history/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { FiArrowLeft, FiList, FiClock } from 'react-icons/fi';\r\n\r\ninterface PredictionRecord {\r\n  id: number;\r\n  price: number;\r\n  size: number;\r\n  rooms: number;\r\n  bathroom: number;\r\n  parking: number;\r\n  furnished: number;\r\n  elevator: number;\r\n  balcony: number;\r\n  floor: number;\r\n  age: number;\r\n  location_score: number;\r\n  prediction_result: number;\r\n  model_used: string;\r\n  timestamp: string;\r\n}\r\n\r\n// Apartment category labels\r\nconst categoryLabels = ['Budget', 'Standard', 'Premium'];\r\n\r\nexport default function HistoryPage() {\r\n  const [predictions, setPredictions] = useState<PredictionRecord[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPredictionHistory = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/predictions/');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch prediction history');\r\n        }\r\n        const data = await response.json();\r\n        setPredictions(data);\r\n      } catch (err) {\r\n        setError('Error fetching prediction history. Please make sure the backend server is running.');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPredictionHistory();\r\n  }, []);\r\n\r\n  const formatDateTime = (dateString: string) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleString();\r\n  };\r\n\r\n  const getModelBadgeColor = (model: string) => {\r\n    switch (model) {\r\n      case 'random_forest': return 'bg-blue-100 text-blue-800';\r\n      case 'knn': return 'bg-purple-100 text-purple-800';\r\n      case 'naive_bayes': return 'bg-green-100 text-green-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getModelDisplayName = (model: string) => {\r\n    switch (model) {\r\n      case 'random_forest': return 'Random Forest';\r\n      case 'knn': return 'KNN';\r\n      case 'naive_bayes': return 'Naive Bayes';\r\n      default: return model;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        <div className=\"flex items-center mb-8\">\r\n          <Link href=\"/\" className=\"flex items-center text-amber-600 hover:text-amber-800\">\r\n            <FiArrowLeft className=\"mr-2\" /> Back to Dashboard\r\n          </Link>\r\n        </div>\r\n        \r\n        <div className=\"bg-white shadow-md rounded-lg overflow-hidden\">\r\n          <div className=\"px-6 py-4 bg-amber-600 text-white\">\r\n            <h1 className=\"text-xl font-semibold\">Prediction History</h1>\r\n          </div>\r\n\r\n          <div className=\"p-6\">\r\n            {loading ? (\r\n              <div className=\"flex justify-center items-center h-64\">\r\n                <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-amber-500\"></div>\r\n              </div>\r\n            ) : error ? (\r\n              <div className=\"p-6 bg-red-50 border border-red-200 rounded-md\">\r\n                <div className=\"text-red-700\">\r\n                  <p>{error}</p>\r\n                </div>\r\n              </div>\r\n            ) : predictions.length === 0 ? (\r\n              <div className=\"flex flex-col items-center justify-center py-12\">\r\n                <FiList className=\"w-16 h-16 text-gray-300 mb-4\" />\r\n                <h3 className=\"text-xl font-medium text-gray-700\">No prediction history</h3>\r\n                <p className=\"text-gray-500 mt-2\">Make some predictions to see them here</p>\r\n                <Link \r\n                  href=\"/predict\" \r\n                  className=\"mt-4 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-amber-600 hover:bg-amber-700\"\r\n                >\r\n                  Make a Prediction\r\n                </Link>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <div className=\"mb-6 flex items-center justify-between\">\r\n                  <h2 className=\"text-xl font-semibold flex items-center text-gray-800\">\r\n                    <FiClock className=\"mr-2\" /> Recent Predictions\r\n                  </h2>\r\n                  <span className=\"text-sm text-gray-500\">\r\n                    {predictions.length} {predictions.length === 1 ? 'prediction' : 'predictions'}\r\n                  </span>\r\n                </div>\r\n\r\n                <div className=\"overflow-x-auto\">\r\n                  <table className=\"min-w-full divide-y divide-gray-200\">\r\n                    <thead className=\"bg-gray-50\">\r\n                      <tr>\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          ID\r\n                        </th>\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Timestamp\r\n                        </th>\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Model\r\n                        </th>\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Price\r\n                        </th>\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Size (mÂ²)\r\n                        </th>\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Rooms\r\n                        </th>\r\n                        <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                          Prediction\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                      {predictions.map((prediction) => (\r\n                        <tr key={prediction.id}>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                            {prediction.id}\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                            {formatDateTime(prediction.timestamp)}\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <span className={`px-2 py-1 text-xs font-semibold rounded-full ${getModelBadgeColor(prediction.model_used)}`}>\r\n                              {getModelDisplayName(prediction.model_used)}\r\n                            </span>\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                            ${prediction.price.toFixed(2)}\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                            {prediction.size}\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                            {prediction.rooms}\r\n                          </td>\r\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                            <span \r\n                              className={`px-2 py-1 text-xs font-semibold rounded-md ${\r\n                                prediction.prediction_result === 0 ? 'bg-blue-100 text-blue-800' :\r\n                                prediction.prediction_result === 1 ? 'bg-green-100 text-green-800' :\r\n                                'bg-amber-100 text-amber-800'\r\n                              }`}\r\n                            >\r\n                              {categoryLabels[prediction.prediction_result]}\r\n                            </span>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n\r\n                <div className=\"mt-8 bg-amber-50 p-6 rounded-lg border border-amber-200\">\r\n                  <h3 className=\"text-lg font-semibold text-amber-800 mb-2\">\r\n                    Prediction Analysis\r\n                  </h3>\r\n                  <p className=\"text-gray-700\">\r\n                    The table above shows the history of apartment predictions made using different machine learning models.\r\n                    Each row represents a past prediction with the apartment features used for prediction and the resulting classification.\r\n                  </p>\r\n                  <p className=\"mt-3 text-gray-700\">\r\n                    This history can be used to track prediction patterns over time and evaluate the consistency of different models.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}